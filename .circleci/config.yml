---
version: 2.1
workflows:
  version: 2
  build:
    jobs:
      - py27
      - py35
      - py36
      - py37
      - sonarcloud:
          requires:
            # generate static analysis and coverage reports in python3 job
            # and upload them to sonarcloud.io in sonarcloud job
            - py37
      - deploy:
          requires:
            # deploy only when test cases have passed
            - py37
          filters:
            tags:
              only: /v.*/

jobs:
  py27:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            virtualenv venv
            echo ". venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install dependencies
          command: pip install -r requirements/test.txt -e .
      - run:
          name: Static analysis (flake8)
          command: flake8 setup.py src tests docs
      - run:
          name: Test cases
          command: pytest --junitxml=workspace/test_results/pytest.xml tests
      - store_test_results:
          path: workspace/test_results


  py35:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/test.txt -e .
      - run:
          name: Static analysis (flake8)
          command: |
            . venv/bin/activate
            flake8 setup.py src tests docs
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest tests

  py36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/test.txt -e .
      - run:
          name: Static analysis (flake8)
          command: |
            . venv/bin/activate
            flake8 setup.py src tests docs
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest tests

  py37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv venv
            echo ". venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install dependencies
          command: pip install -r requirements/test.txt -e .
      - run:
          name: Style check (yamllint)
          command: |
            . venv/bin/activate
            yamllint .
      - run:
          name: Style check (black)
          command: black --check setup.py src tests docs
      - run:
          name: Style check (isort)
          command: isort --check-only setup.py src/**/*.py tests/**/*.py docs/**/*.py
      - run:
          name: Static analysis (flake8)
          command: flake8 setup.py src tests docs
      - run:
          name: Static analysis (pylint)
          command: |
            mkdir workspace
            pylint \
              --exit-zero \
              --reports no \
              --msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}' \
              setup.py src > workspace/pylint.txt
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest \
              --cov=greynoise \
              --cov-report=xml:workspace/coverage/report.xml \
              --junitxml=workspace/test_results/pytest.xml \
              tests
      - persist_to_workspace:
          root: workspace
          paths:
            - pylint.txt
            - coverage/report.xml
            - test_results/pytest.xml
      - store_test_results:
          path: workspace/test_results

  sonarcloud:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Setup environment variables
          command: |
            echo "SONAR_SCANNER_VERSION=3.3.0.1492" >> $BASH_ENV
            echo 'SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION' >> $BASH_ENV
      - run:
          name: Install sonar scanner
          command: |
            rm -rf $SONAR_SCANNER_HOME
            mkdir -p $SONAR_SCANNER_HOME
            curl \
              -sSLo \
              $HOME/.sonar/sonar-scanner.zip \
              http://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/$SONAR_SCANNER_VERSION/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip
            unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            rm $HOME/.sonar/sonar-scanner.zip
      - run:
          name: Run sonar scanner
          command: |
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"
            sonar-scanner \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.branch.name=$CIRCLE_BRANCH

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            virtualenv venv
            echo ". venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install dependencies
          command: pip install -r requirements/test.txt -e .
      - run:
          name: Build packages
          command: python3 setup.py sdist bdist_wheel
      - run:
          name: Upload package to pypi
          command: twine upload --username __token__ --disable-progress-bar dist/*
