{% import "macros.txt.j2" as macros with context %}
{%- if verbose %}
{% for ip_context in results %}
{%- if ip_context.business_service_intelligence.found %}
<riot>{{ ip_context.ip }}</riot> is in RIOT dataset.

          <header>OVERVIEW</header>
----------------------------
<key>IP</key>: <value>{{ ip_context.ip }}</value>
<key>RIOT</key>: {{ macros.classification(ip_context.business_service_intelligence.found) }}
<key>Category</key>: <value>{{ ip_context.business_service_intelligence.category }}</value>
<key>Trust Level</key>: <value>{{ ip_context.business_service_intelligence.trust_level }}</value>
<key>Name</key>: <value>{{ ip_context.business_service_intelligence.name }}</value>
<key>Description</key>: <value>{{ ip_context.business_service_intelligence.description }}</value>
<key>Explanation</key>: <value>{{ ip_context.business_service_intelligence.explanation }}</value>
<key>Last Updated</key>: <value>{{ ip_context.business_service_intelligence.last_updated }}</value>
<key>Reference</key>: <value>{{ ip_context.business_service_intelligence.reference }}</value>
{%- else %}
<not-riot>{{ ip_context.ip }}</not-riot> is <bold>NOT FOUND</bold> in RIOT dataset.
{%- endif %}
{%- endfor %}
{%- else %}
{% for ip_context in results %}
{%- if ip_context.business_service_intelligence.found %}
<riot>{{ ip_context.ip }}</riot> is in <bold><blue>RIOT</blue></bold> dataset. Name: <value>{{ ip_context.business_service_intelligence.name }}</value> Category: <value>{{ ip_context.business_service_intelligence.category }}</value> Trust Level: <value>{{ ip_context.business_service_intelligence.trust_level }}</value> Last Updated: <value>{{ ip_context.business_service_intelligence.last_updated }}</value>
{%- elif ip_context.message %}
{{ ip_context.message }}
{%- else %}
<not-riot>{{ ip_context.ip }}</not-riot> is <red><bold>NOT FOUND</bold></red> in RIOT dataset.
{%- endif %}
{%- endfor %}
{%- endif %}
