version: 2.1
workflows:
  version: 2
  build:
    jobs:
      - python2
      - python3
      - sonarcloud:
          requires:
            # generate coverage reports in python jobs
            # and upload them to sonarcloud.io in sonarcloud job
            - python2
            - python3

jobs:
  python2:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt -e .
      - run:
          name: Static analysis
          command: |
            . venv/bin/activate
            flake8 src tests docs
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest tests
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest --cov=greynoise --cov-report=xml:workspace/py27.xml --junitxml=test_results/py27/results.xml tests
      - persist_to_workspace:
          root: workspace
          paths:
            - py27.xml
      - store_test_results:
          path: test_results


  python3:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt -e .

      - run:
          name: Static analysis
          command: |
            . venv/bin/activate
            flake8 src tests docs
      - run:
          name: Test cases
          command: |
            . venv/bin/activate
            pytest --cov=greynoise --cov-report=xml:workspace/py37.xml --junitxml=test_results/py37/results.xml tests
      - persist_to_workspace:
          root: workspace
          paths:
            - py37.xml
      - store_test_results:
          path: test_results

  sonarcloud:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Sonar scanner
          command: |
            SONAR_SCANNER_VERSION=3.3.0.1492
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION
            rm -rf $SONAR_SCANNER_HOME
            mkdir -p $SONAR_SCANNER_HOME
            curl -sSLo $HOME/.sonar/sonar-scanner.zip http://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/$SONAR_SCANNER_VERSION/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip
            unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            rm $HOME/.sonar/sonar-scanner.zip
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"

            sonar-scanner \
              -Dsonar.projectKey=GreyNoise-Intelligence_pygreynoise \
              -Dsonar.organization=greynoise-intelligence \
              -Dsonar.sources=src \
              -Dsonar.tests=tests \
              -Dsonar.python.coverage.reportPaths='workspace/*.xml' \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=36b503aeaab2a80a95d98e7fb105772d7a0c0c0b
